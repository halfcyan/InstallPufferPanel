---
- name: Install Docker
  hosts: ubuntu
  remote_user: admin
  become: true

  vars:
    token: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    subdomain: "pufferpanel"
    username: "admin"

  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository to apt
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      ansible.builtin.apt:
        name: "{{ item }}"
        state: current
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Check docker is active
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Adding ubuntu to docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: true

    - name: Install docker-compose
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: ubuntu
        group: ubuntu

    - name: Create portainer container
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce
        state: started
        recreate: true
        restart_policy: unless_stopped
        published_ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data

    # FIREWALL SETUP
    - name: Open Portainer port
      community.general.ufw:
        state: enabled
        rule: allow
        port: "9000"
        proto: tcp

    - name: Open SSH port
      community.general.ufw:
        state: enabled
        rule: allow
        port: "22"
        proto: tcp

    - name: Make DuckDNS directory
      ansible.builtin.file:
        path: /home/{{ username }}/duckdns
        state: directory
        mode: 0755

    - name: Create DuckDNS Docker container
      community.docker.docker_container:
        name: DuckDNS
        image: linuxserver/duckdns
        state: started
        recreate: true
        restart_policy: unless_stopped
        env:
          - PUID=1000
          - PGID=1000
          - TZ=Europe/London
          - SUBDOMAINS={{ subdomain }}
          - TOKEN={{ token }}
          - LOG_FILE=true
        volumes:
          - /home/{{ username }}/duckdns:/config
